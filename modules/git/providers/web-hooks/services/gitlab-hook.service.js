const a225_0x1952a0=a225_0x26cb;function a225_0x26cb(_0x29917e,_0x531479){const _0x31b907=a225_0x42ee();return a225_0x26cb=function(_0x392fd6,_0x4e4f9a){_0x392fd6=_0x392fd6-0x111;let _0x42eec1=_0x31b907[_0x392fd6];return _0x42eec1;},a225_0x26cb(_0x29917e,_0x531479);}(function(_0x4658da,_0x1c1492){const _0xb9ec5b=a225_0x26cb,_0x53c252=_0x4658da();while(!![]){try{const _0x199084=parseInt(_0xb9ec5b(0x11a))/0x1+parseInt(_0xb9ec5b(0x12f))/0x2*(-parseInt(_0xb9ec5b(0x114))/0x3)+-parseInt(_0xb9ec5b(0x12d))/0x4+-parseInt(_0xb9ec5b(0x11e))/0x5*(-parseInt(_0xb9ec5b(0x12c))/0x6)+-parseInt(_0xb9ec5b(0x118))/0x7*(parseInt(_0xb9ec5b(0x12a))/0x8)+parseInt(_0xb9ec5b(0x112))/0x9*(parseInt(_0xb9ec5b(0x132))/0xa)+parseInt(_0xb9ec5b(0x129))/0xb*(parseInt(_0xb9ec5b(0x12e))/0xc);if(_0x199084===_0x1c1492)break;else _0x53c252['push'](_0x53c252['shift']());}catch(_0x306025){_0x53c252['push'](_0x53c252['shift']());}}}(a225_0x42ee,0xc658f));const a225_0x4e4f9a=(function(){let _0x68bc1e=!![];return function(_0x524cae,_0x1cbd62){const _0x5a087a=_0x68bc1e?function(){const _0x3f2592=a225_0x26cb;if(_0x1cbd62){const _0x3fa4da=_0x1cbd62[_0x3f2592(0x115)](_0x524cae,arguments);return _0x1cbd62=null,_0x3fa4da;}}:function(){};return _0x68bc1e=![],_0x5a087a;};}()),a225_0x392fd6=a225_0x4e4f9a(this,function(){const _0x762bed=a225_0x26cb;return a225_0x392fd6['toString']()[_0x762bed(0x122)]('(((.+)+)+)+$')[_0x762bed(0x11b)]()[_0x762bed(0x137)](a225_0x392fd6)[_0x762bed(0x122)](_0x762bed(0x117));});a225_0x392fd6();'use strict';Object['defineProperty'](exports,a225_0x1952a0(0x133),{'value':!![]}),exports[a225_0x1952a0(0x123)]=void 0x0;function a225_0x42ee(){const _0x5647ee=['createRequest','repository','getAll','203808guhzik','4893960xEpEaT','api','3858RgubJU','2937948rLmHjc','60MTxEwv','46xXQASg','delete','fromGitlab','10dFJBvx','__esModule','./git-hook.service','GitHookService','post','constructor','BadRequestError','1184877PNVNgf','update','60789VzxnoU','apply','map','(((.+)+)+)+$','7QjjvNc','HookDto','1269382VSHHMA','toString','hooks/','getOne','8795DEEyMu','NotFoundError','get','request','search','GitlabHookService','../../../../../core/errors/not-found.error','apiUrl'];a225_0x42ee=function(){return _0x5647ee;};return a225_0x42ee();}const bad_request_error_1=require('../../../../../core/errors/bad-request.error'),not_found_error_1=require(a225_0x1952a0(0x124)),hook_dto_1=require('../dto/hook.dto'),git_hook_service_1=require(a225_0x1952a0(0x134));class GitlabHookService extends git_hook_service_1[a225_0x1952a0(0x135)]{constructor(_0x456908,_0x10d85e){const _0x27d703=a225_0x1952a0;super(_0x456908),this[_0x27d703(0x12b)]=_0x10d85e,this[_0x27d703(0x121)]=this['createRequest']();}[a225_0x1952a0(0x126)](){const _0x2e64a4=a225_0x1952a0;return this['api'][_0x2e64a4(0x126)](this[_0x2e64a4(0x127)][_0x2e64a4(0x125)]);}async['create'](_0x1d24c0){const _0xadae69=a225_0x1952a0;try{const _0x3fee00=await this[_0xadae69(0x121)][_0xadae69(0x136)]('hooks',_0x1d24c0);return hook_dto_1[_0xadae69(0x119)][_0xadae69(0x131)](_0x3fee00);}catch(_0x3507af){throw new bad_request_error_1[(_0xadae69(0x111))](_0x3507af);}}async[a225_0x1952a0(0x11d)](_0x493027){const _0x4fea4f=a225_0x1952a0;try{const _0x51faa6=await this['request'][_0x4fea4f(0x120)](_0x4fea4f(0x11c)+_0x493027);return hook_dto_1[_0x4fea4f(0x119)]['fromGitlab'](_0x51faa6);}catch(_0xd70a7b){throw new not_found_error_1[(_0x4fea4f(0x11f))](_0xd70a7b);}}async[a225_0x1952a0(0x128)](){const _0x53c92f=a225_0x1952a0;try{const _0x3978bc=await this[_0x53c92f(0x121)][_0x53c92f(0x120)]('hooks');return _0x3978bc[_0x53c92f(0x116)](_0x40461c=>hook_dto_1[_0x53c92f(0x119)][_0x53c92f(0x131)](_0x40461c));}catch(_0x5aebf2){throw new not_found_error_1[(_0x53c92f(0x11f))](_0x5aebf2);}}async[a225_0x1952a0(0x113)](_0x26bab1,_0x3f516b){const _0x36919b=a225_0x1952a0;try{const _0x15084d=await this['request']['put'](_0x36919b(0x11c)+_0x26bab1,_0x3f516b);return hook_dto_1['HookDto'][_0x36919b(0x131)](_0x15084d);}catch(_0x39fe5c){throw new not_found_error_1[(_0x36919b(0x11f))](_0x39fe5c);}}async[a225_0x1952a0(0x130)](_0x40d1f6){const _0xf13b44=a225_0x1952a0;try{await this['request'][_0xf13b44(0x130)](_0xf13b44(0x11c)+_0x40d1f6);}catch(_0x27ddb0){throw new not_found_error_1[(_0xf13b44(0x11f))](_0x27ddb0);}}}exports['GitlabHookService']=GitlabHookService;