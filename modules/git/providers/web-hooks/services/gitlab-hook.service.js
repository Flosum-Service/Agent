const a163_0x5e8c5d=a163_0x86de;function a163_0x3799(){const _0x4b8a1e=['map','fromGitlab','delete','getAll','../../../../../core/errors/not-found.error','220YCzyBz','get','38076ztyPsJ','1304xujJPd','(((.+)+)+)+$','hooks/','12114FwaafG','4704140vlqpiS','HookDto','toString','hooks','GitlabHookService','../dto/hook.dto','11290BIAkqY','update','1JtIfUV','130122LMBKlK','constructor','post','252NfRwnp','398366gkaOkE','17437YvUdPZ','1278915oReEuN','BadRequestError','NotFoundError','create','search','./git-hook.service','put','createRequest','GitHookService','request','getOne','api','apply','../../../../../core/errors/bad-request.error','__esModule','defineProperty'];a163_0x3799=function(){return _0x4b8a1e;};return a163_0x3799();}(function(_0x111bc8,_0x299f95){const _0x24c70d=a163_0x86de,_0x7e686b=_0x111bc8();while(!![]){try{const _0x2f45aa=-parseInt(_0x24c70d(0xb4))/0x1*(-parseInt(_0x24c70d(0xb9))/0x2)+-parseInt(_0x24c70d(0xa7))/0x3+parseInt(_0x24c70d(0xac))/0x4+parseInt(_0x24c70d(0xa5))/0x5*(parseInt(_0x24c70d(0xb5))/0x6)+-parseInt(_0x24c70d(0xba))/0x7*(parseInt(_0x24c70d(0xa8))/0x8)+parseInt(_0x24c70d(0xab))/0x9*(parseInt(_0x24c70d(0xb2))/0xa)+parseInt(_0x24c70d(0xbb))/0xb*(-parseInt(_0x24c70d(0xb8))/0xc);if(_0x2f45aa===_0x299f95)break;else _0x7e686b['push'](_0x7e686b['shift']());}catch(_0x5aa9ca){_0x7e686b['push'](_0x7e686b['shift']());}}}(a163_0x3799,0xf1676));const a163_0x562f69=(function(){let _0x3ccf5c=!![];return function(_0x5bb1b0,_0x32d9bf){const _0x4a66e7=_0x3ccf5c?function(){const _0x178223=a163_0x86de;if(_0x32d9bf){const _0x51d39d=_0x32d9bf[_0x178223(0xc7)](_0x5bb1b0,arguments);return _0x32d9bf=null,_0x51d39d;}}:function(){};return _0x3ccf5c=![],_0x4a66e7;};}()),a163_0x24284a=a163_0x562f69(this,function(){const _0xc2fdd3=a163_0x86de;return a163_0x24284a[_0xc2fdd3(0xae)]()[_0xc2fdd3(0xbf)](_0xc2fdd3(0xa9))[_0xc2fdd3(0xae)]()[_0xc2fdd3(0xb6)](a163_0x24284a)[_0xc2fdd3(0xbf)]('(((.+)+)+)+$');});a163_0x24284a();'use strict';Object[a163_0x5e8c5d(0x9f)](exports,a163_0x5e8c5d(0x9e),{'value':!![]}),exports['GitlabHookService']=void 0x0;const bad_request_error_1=require(a163_0x5e8c5d(0xc8)),not_found_error_1=require(a163_0x5e8c5d(0xa4)),hook_dto_1=require(a163_0x5e8c5d(0xb1)),git_hook_service_1=require(a163_0x5e8c5d(0xc0));function a163_0x86de(_0x284b16,_0xcef4c6){const _0xb92e7b=a163_0x3799();return a163_0x86de=function(_0x24284a,_0x562f69){_0x24284a=_0x24284a-0x9e;let _0x3799ff=_0xb92e7b[_0x24284a];return _0x3799ff;},a163_0x86de(_0x284b16,_0xcef4c6);}class GitlabHookService extends git_hook_service_1[a163_0x5e8c5d(0xc3)]{constructor(_0x370591,_0x15cf2c){const _0x480d9e=a163_0x5e8c5d;super(_0x370591),this[_0x480d9e(0xc6)]=_0x15cf2c,this[_0x480d9e(0xc4)]=this['createRequest']();}[a163_0x5e8c5d(0xc2)](){const _0x20c4cf=a163_0x5e8c5d;return this[_0x20c4cf(0xc6)][_0x20c4cf(0xc2)](this['repository']['apiUrl']);}async[a163_0x5e8c5d(0xbe)](_0x4d9608){const _0x279cbc=a163_0x5e8c5d;try{const _0x22d598=await this[_0x279cbc(0xc4)][_0x279cbc(0xb7)]('hooks',_0x4d9608);return hook_dto_1[_0x279cbc(0xad)]['fromGitlab'](_0x22d598);}catch(_0x27bb6f){throw new bad_request_error_1[(_0x279cbc(0xbc))](_0x27bb6f);}}async[a163_0x5e8c5d(0xc5)](_0x3fb2d5){const _0x4f040e=a163_0x5e8c5d;try{const _0xa82efb=await this[_0x4f040e(0xc4)][_0x4f040e(0xa6)](_0x4f040e(0xaa)+_0x3fb2d5);return hook_dto_1['HookDto']['fromGitlab'](_0xa82efb);}catch(_0x92119f){throw new not_found_error_1['NotFoundError'](_0x92119f);}}async[a163_0x5e8c5d(0xa3)](){const _0x226add=a163_0x5e8c5d;try{const _0x10aa42=await this['request']['get'](_0x226add(0xaf));return _0x10aa42[_0x226add(0xa0)](_0x48cd08=>hook_dto_1[_0x226add(0xad)]['fromGitlab'](_0x48cd08));}catch(_0x22a8c7){throw new not_found_error_1[(_0x226add(0xbd))](_0x22a8c7);}}async[a163_0x5e8c5d(0xb3)](_0x19d804,_0x440e56){const _0x4459af=a163_0x5e8c5d;try{const _0x20fed5=await this[_0x4459af(0xc4)][_0x4459af(0xc1)](_0x4459af(0xaa)+_0x19d804,_0x440e56);return hook_dto_1[_0x4459af(0xad)][_0x4459af(0xa1)](_0x20fed5);}catch(_0x56d754){throw new not_found_error_1[(_0x4459af(0xbd))](_0x56d754);}}async[a163_0x5e8c5d(0xa2)](_0x30b8a9){const _0x46e4d6=a163_0x5e8c5d;try{await this[_0x46e4d6(0xc4)][_0x46e4d6(0xa2)](_0x46e4d6(0xaa)+_0x30b8a9);}catch(_0x42ba3a){throw new not_found_error_1[(_0x46e4d6(0xbd))](_0x42ba3a);}}}exports[a163_0x5e8c5d(0xb0)]=GitlabHookService;